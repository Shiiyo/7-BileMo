nelmio_api_doc:
    documentation:
        info:
            title: Bilemo API
            description: Bienvenue sur l'API de Bilemo, le créateur de téléphone mobile haut de gamme !
            version: 1.0.0 
        tags:
            - name: "Utilisateurs"
              description: "Afficher et gérer les utilisateurs"
            - name: "mobiles"
              description: "Voir les mobiles de la marque Bilemo"
            - name: "login"
              description: "Générer un token d'autentification"
        paths:
            /customers:
                get:
                    tags:
                        - "Utilisateurs"
                    summary: Liste les utilisateurs lié au client connecté
                    description: "Retourne l'utilisateur demandé"
                    produces: 
                        - "application/json"
                    parameters:
                        - name: "offset"
                          in: "query"
                          description: "Numéro de la page"
                          required: true 
                          type: "integer"
                        
                        - name: "nbResult"
                          in: "query"
                          description: "Nombre de résultats par page"
                          required: true 
                          type: "integer"
                    responses:
                        200:
                            description: Un tableau JSON des utilisateurs trouvés
                            schema:
                                $ref: "#/definitions/ArrayOfCustomers"
                    security:
                        - BearerAuth: []

                post:
                    tags:
                        - "Utilisateurs"
                    summary: Ajoute un utilisateur
                    description: "Crée un nouvel utilisateur"
                    produces: 
                        - "application/json"
                    parameters:
                        - name: "data"
                          in: "body"
                          description: "Données de l'utilisateur"
                          required: true
                          schema:
                            $ref: "#/definitions/Customer"

                    responses:
                        201:
                            description: "Utilisateur créé !"
                    security:
                        - BearerAuth: []

            /customers/{id}:
                get:
                    tags:
                        - "Utilisateurs"
                    summary: Trouve un utilisateur par son ID
                    description: "Retourne l'utilisateur demandé"
                    produces: 
                        - "application/json"
                    parameters:
                        - name: "id"
                          in: "path"
                          description: "ID de l'utilisateur à retourner"
                          required: true 
                          type: "integer"
                    responses:
                        200:
                            description: Un tableau JSON décrivant l'utilisateur
                            schema:
                                $ref: "#/definitions/CustomerDetail"
                    security:
                        - BearerAuth: []
            
                put:
                    tags:
                        - "Utilisateurs"
                    summary: Modifie un utilisateur par son ID
                    produces: 
                        - "application/json"
                    parameters:
                        - name: "id"
                          in: "path"
                          description: "ID de l'utilisateur à modifier"
                          required: true 
                          type: "integer"
                        
                        - name: "data"
                          in: "body"
                          description: "La ou les modifications à apporter à l'utilisateur"
                          required: true
                          schema:
                            $ref: "#/definitions/Customer"
                    responses:
                        200:
                            description: Utilisateur mis à jour !
                        404:
                            description: L'utilisateur n'existe pas ou vous n'êtes pas propriétaire de cet utilisateur.
                    security:
                        - BearerAuth: []
                    
                delete:
                    tags:
                        - "Utilisateurs"
                    summary: Supprime un utilisateur avec son ID
                    produces: 
                        - "application/json"
                    parameters:
                        - name: "id"
                          in: "path"
                          description: "ID de l'utilisateur à supprimer"
                          required: true 
                          type: "integer"
                    responses:
                        200:
                            description: Utilisateur supprimé !
                        404:
                            description: L'utilisateur n'existe pas ou vous n'êtes pas propriétaire de cet utilisateur.
                    security:
                        - BearerAuth: []
                                
        securityDefinitions:
            BearerAuth:
                type: "apiKey"
                description: "Value: Bearer {jwt}"
                name: "Authorization"
                in: "header"
                    
        definitions:
            CustomerDetail:
                type: "object"
                required:
                    - "owner"
                    - "lastName"
                    - "firstName"
                properties:
                    id:
                        type: "integer"
                        example: 6
                    owner:
                        type: "string"
                        example: "SFR"
                    lastName:
                        type: "string"
                        example: "Dupont"
                    firstName:
                        type: "string"
                        example: "David"
                    email:
                        type: "string"
                        example: "marie.francois@deoliveira.com"
                    
            Customer:
                type: "object"
                properties:
                    lastName:
                        type: "string"
                        example: "Dupont"
                    firstName:
                        type: "string"
                        example: "David"
                    email:
                        type: "string"
                        example: "marie.francois@deoliveira.com"
                    
            ArrayOfCustomers:
                type: "array"
                items:
                    type: object
                    properties:
                    id:
                        type: "integer"
                    lastname:
                        type: "string"
                example:
                    - id: 1
                      lastname: "Dufour"
                    - id: 2
                      lastname: "Potier"


    areas: # to filter documented areas
        path_patterns:
            - ^/api/extra(?!/api/doc.json$)
